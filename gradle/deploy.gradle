apply plugin: "java"
apply plugin: "signing"
apply plugin: "maven-publish"
apply plugin: "org.jetbrains.dokka"

// javadocJar and sourcesJar tasks pick up group and version
group = project.groupId
version = project.versionName

task sourcesJar(type: Jar) {
    group "publishing"
    description "Generates source jar"
    archiveClassifier.set("sources")
    from kotlin.sourceSets.main.kotlin.srcDirs
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    group "publishing"
    description "Generates javadocJar based on Dokka"
    archiveClassifier.set("javadoc")
    from dokkaJavadoc.outputDirectory
}

dokkaJavadoc.configure {
    moduleName.set("Engelsystem")
    dokkaSourceSets {
        named("main") {
            sourceLink {
                localDirectory.set(file("engelsystem-base/src/main/kotlin"))
                remoteUrl.set(java.net.URL("https://github.com/johnjohndoe/engelsystem/blob/master/engelsystem-base/src/main/kotlin"))
                remoteLineSuffix.set("#L")
            }
        }
    }
}

artifacts {
    archives javadocJar
}

Properties properties = new Properties()
def propertiesFile = project.rootProject.file("${System.properties['user.home']}/.gradle/gradle.properties")
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}
def mavenCentralUrl = properties.getProperty("sonatypeRepo") ?: project.sonatypeRepo
def mavenCentralUserName = properties.getProperty("sonatypeUserName") ?: project.sonatypeUserName
def mavenCentralPassword = properties.getProperty("sonatypePassword") ?: project.sonatypePassword

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.java
                groupId = project.groupId
                artifactId = project.artifactId
                version = project.versionName

                artifact sourcesJar {
                    classifier "sources"
                }

                artifact javadocJar {
                    classifier "javadoc"
                }

                pom {
                    name = project.packageName
                    description = project.packageDescription
                    url = project.packageWebsiteUrl
                    licenses {
                        license {
                            name = project.packageLicenseApacheName
                            url = project.packageLicenseApacheUrl
                        }
                    }
                    scm {
                        connection = project.packageScmConnection
                        developerConnection = project.packageScmDeveloperConnection
                        url = project.packageWebsiteUrl
                    }
                    developers {
                        developer {
                            id = packageDeveloperId
                            name = packageDeveloperName
                            email = packageDeveloperEmail
                        }
                    }
                }

                repositories {
                    maven {
                        name project.mavenCentralPublicationName
                        url = uri(mavenCentralUrl)
                        credentials {
                            username = mavenCentralUserName
                            password = mavenCentralPassword
                        }
                    }
                }
            }
        }
    }
    signing {
        sign publishing.publications.release
    }
}
